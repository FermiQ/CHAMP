# Makefile.in generated by automake 1.10 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/einspline
pkglibdir = $(libdir)/einspline
pkgincludedir = $(includedir)/einspline
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
check_PROGRAMS = TestBspline$(EXEEXT) TestNUBspline$(EXEEXT) \
	test_fbspline$(EXEEXT) test_bspline_s$(EXEEXT) \
	test_bspline_d$(EXEEXT) test_multi$(EXEEXT) \
	test_fmulti_bspline$(EXEEXT) test_multi_cpp$(EXEEXT) \
	$(am__EXEEXT_1)
bin_PROGRAMS = time_multi$(EXEEXT)
subdir = src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/ax_cc_maxopt.m4 \
	$(top_srcdir)/m4/ax_cxx_maxopt.m4 \
	$(top_srcdir)/m4/ax_f77_maxopt.m4 \
	$(top_srcdir)/m4/ax_check_compiler_flags.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_cxx_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_c_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_f77_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_gcc_aligns_stack.m4 \
	$(top_srcdir)/m4/ax_gcc_archflag.m4 \
	$(top_srcdir)/m4/ax_gxx_archflag.m4 \
	$(top_srcdir)/m4/ax_gcc_version.m4 \
	$(top_srcdir)/m4/ax_gcc_x86_cpuid.m4 \
	$(top_srcdir)/m4/ax_ext.m4 $(top_srcdir)/m4/ac_cxx_restrict.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libeinspline_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libeinspline_la_SOURCES_DIST = aligned_alloc.h bspline_base.h \
	bspline_create.c bspline_create.h bspline_structs.h \
	bspline_data.c bspline_eval_std_s.h bspline_eval_sse_s.h \
	bspline_eval_std_c.h bspline_eval_sse_c.h bspline_eval_std_d.h \
	bspline_eval_sse_d.h bspline_eval_std_z.h bspline_eval_sse_z.h \
	multi_bspline.h multi_bspline_create.c multi_bspline_create.h \
	multi_bspline_eval_c.h multi_bspline_eval_d.h \
	multi_bspline_eval_s.h multi_bspline_eval_z.h \
	multi_bspline_structs.h multi_nubspline_create.c \
	nubspline_base.h nubspline_create.c nubspline_create.h \
	nubspline_eval_sse_s.h nubspline_eval_std_s.h \
	nubspline_eval_sse_c.h nubspline_eval_std_c.h \
	nubspline_eval_sse_d.h nubspline_eval_std_d.h \
	nubspline_eval_sse_z.h nubspline_eval_std_z.h \
	nubspline_structs.h nubasis.h nubasis.c nugrid.h nugrid.c \
	fbspline.c fbspline.h fmulti_bspline.c fmulti_bspline.h \
	fnubspline.c fnubspline.h multi_bspline_eval_std_s.c \
	multi_bspline_eval_std_s_cpp.cc multi_bspline_eval_std_c.c \
	multi_bspline_eval_std_c_cpp.cc \
	multi_bspline_eval_std_s_impl.h \
	multi_bspline_eval_std_c_impl.h multi_bspline_eval_sse_s.c \
	multi_bspline_eval_sse_s_cpp.cc multi_bspline_eval_sse_c.c \
	multi_bspline_eval_sse_c_cpp.cc \
	multi_bspline_eval_sse_s_impl.h \
	multi_bspline_eval_sse_c_impl.h multi_bspline_eval_std_d.c \
	multi_bspline_eval_std_d_cpp.cc multi_bspline_eval_std_z.c \
	multi_bspline_eval_std_z_cpp.cc \
	multi_bspline_eval_std_d_impl.h \
	multi_bspline_eval_std_z_impl.h multi_nubspline_eval_std_z.c \
	multi_nubspline_eval_std_z_cpp.cc \
	multi_nubspline_eval_std_z_impl.h multi_bspline_eval_sse_d.c \
	multi_bspline_eval_sse_d_cpp.cc multi_bspline_eval_sse_z.c \
	multi_bspline_eval_sse_z_cpp.cc \
	multi_bspline_eval_sse_d_impl.h \
	multi_bspline_eval_sse_z_impl.h multi_nubspline_eval_sse_z.c \
	multi_nubspline_eval_sse_z_cpp.cc \
	multi_nubspline_eval_sse_z_impl.h blip_create.c blip_create.h \
	multi_bspline_create_cuda.cu multi_bspline_cuda_s_impl.h \
	multi_bspline_cuda_c_impl.h multi_bspline_eval_cuda.h
am__objects_1 = multi_bspline_eval_std_s.lo \
	multi_bspline_eval_std_s_cpp.lo \
	multi_bspline_eval_std_c.lo \
	multi_bspline_eval_std_c_cpp.lo
#am__objects_1 = multi_bspline_eval_sse_s.lo \
#	multi_bspline_eval_sse_s_cpp.lo \
#	multi_bspline_eval_sse_c.lo \
#	multi_bspline_eval_sse_c_cpp.lo
am__objects_2 = multi_bspline_eval_std_d.lo \
	multi_bspline_eval_std_d_cpp.lo \
	multi_bspline_eval_std_z.lo \
	multi_bspline_eval_std_z_cpp.lo \
	multi_nubspline_eval_std_z.lo \
	multi_nubspline_eval_std_z_cpp.lo
#am__objects_2 = multi_bspline_eval_sse_d.lo \
#	multi_bspline_eval_sse_d_cpp.lo \
#	multi_bspline_eval_sse_z.lo \
#	multi_bspline_eval_sse_z_cpp.lo \
#	multi_nubspline_eval_sse_z.lo \
#	multi_nubspline_eval_sse_z_cpp.lo
#am__objects_3 = blip_create.lo
#am__objects_4 = multi_bspline_create_cuda.lo
am_libeinspline_la_OBJECTS = bspline_create.lo bspline_data.lo \
	multi_bspline_create.lo multi_nubspline_create.lo \
	nubspline_create.lo nubasis.lo nugrid.lo fbspline.lo \
	fmulti_bspline.lo fnubspline.lo $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4)
libeinspline_la_OBJECTS = $(am_libeinspline_la_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
#am__EXEEXT_1 = test_blip$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am_TestBspline_OBJECTS = TestBspline.$(OBJEXT)
TestBspline_OBJECTS = $(am_TestBspline_OBJECTS)
TestBspline_DEPENDENCIES = libeinspline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_TestNUBspline_OBJECTS = TestNUBspline.$(OBJEXT)
TestNUBspline_OBJECTS = $(am_TestNUBspline_OBJECTS)
TestNUBspline_DEPENDENCIES = libeinspline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__test_blip_SOURCES_DIST = test_blip.c
#am_test_blip_OBJECTS = test_blip.$(OBJEXT)
test_blip_OBJECTS = $(am_test_blip_OBJECTS)
test_blip_DEPENDENCIES = libeinspline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_bspline_d_OBJECTS = test_bspline_d.$(OBJEXT)
test_bspline_d_OBJECTS = $(am_test_bspline_d_OBJECTS)
test_bspline_d_DEPENDENCIES = libeinspline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_bspline_s_OBJECTS = test_bspline_s.$(OBJEXT)
test_bspline_s_OBJECTS = $(am_test_bspline_s_OBJECTS)
test_bspline_s_DEPENDENCIES = libeinspline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_fbspline_OBJECTS = test_fbspline.$(OBJEXT)
test_fbspline_OBJECTS = $(am_test_fbspline_OBJECTS)
test_fbspline_DEPENDENCIES = libeinspline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_fmulti_bspline_OBJECTS = test_fmulti_bspline.$(OBJEXT)
test_fmulti_bspline_OBJECTS = $(am_test_fmulti_bspline_OBJECTS)
test_fmulti_bspline_DEPENDENCIES = libeinspline.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_multi_OBJECTS = test_multi.$(OBJEXT)
test_multi_OBJECTS = $(am_test_multi_OBJECTS)
test_multi_DEPENDENCIES = libeinspline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_multi_cpp_OBJECTS = test_multi_cpp.$(OBJEXT)
test_multi_cpp_OBJECTS = $(am_test_multi_cpp_OBJECTS)
test_multi_cpp_DEPENDENCIES = libeinspline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_time_multi_OBJECTS = time_multi.$(OBJEXT)
time_multi_OBJECTS = $(am_time_multi_OBJECTS)
time_multi_DEPENDENCIES = libeinspline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(LIBTOOL) --tag=F77 $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libeinspline_la_SOURCES) $(TestBspline_SOURCES) \
	$(TestNUBspline_SOURCES) $(test_blip_SOURCES) \
	$(test_bspline_d_SOURCES) $(test_bspline_s_SOURCES) \
	$(test_fbspline_SOURCES) $(test_fmulti_bspline_SOURCES) \
	$(test_multi_SOURCES) $(test_multi_cpp_SOURCES) \
	$(time_multi_SOURCES)
DIST_SOURCES = $(am__libeinspline_la_SOURCES_DIST) \
	$(TestBspline_SOURCES) $(TestNUBspline_SOURCES) \
	$(am__test_blip_SOURCES_DIST) $(test_bspline_d_SOURCES) \
	$(test_bspline_s_SOURCES) $(test_fbspline_SOURCES) \
	$(test_fmulti_bspline_SOURCES) $(test_multi_SOURCES) \
	$(test_multi_cpp_SOURCES) $(time_multi_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/cyrus/champ/lib/lib2/einspline/missing --run aclocal-1.10
ALL_STATIC = 
AMTAR = ${SHELL} /home/cyrus/champ/lib/lib2/einspline/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/cyrus/champ/lib/lib2/einspline/missing --run autoconf
AUTOHEADER = ${SHELL} /home/cyrus/champ/lib/lib2/einspline/missing --run autoheader
AUTOMAKE = ${SHELL} /home/cyrus/champ/lib/lib2/einspline/missing --run automake-1.10
AWK = mawk
CC = icc -std=c99 -fno-second-underscore
CCDEPMODE = depmode=gcc3
CFLAGS = -O3 -g
CPP = icc -std=c99 -fno-second-underscore -E
CPPFLAGS = 
CUDA_CFLAGS = -I/usr/local/cuda/include
CUDA_LIBS = -L/usr/local/cuda/lib -lcuda -lcudart
CXX = icpc -fno-second-underscore
CXXCPP = icpc -fno-second-underscore -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -restrict -g
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = ifort
FFLAGS = -zero -save -extend_source -w -r8 -O3 -pad -mtune=core2 -march=core2 -xT
FFTW3F_CFLAGS = 
FFTW3F_LIBS = 
FFTW3_CFLAGS = 
FFTW3_LIBS = 
FLIBS =  -L/usr -limf -lm -L/opt/intel/fce/10.1.015/lib -L/usr/lib/gcc/x86_64-linux-gnu/4.1.2/ -L/usr/lib/gcc/x86_64-linux-gnu/4.1.2/../../../../lib64 -lifport -lifcore -lsvml -lipgo -lirc -lirc_s -ldl
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/cyrus/champ/lib/lib2/einspline/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NVCC = nvcc
NVCCFLAGS = -DNO_CUDA_MAIN -O3 -use_fast_math -g
OBJEXT = o
OPENMP_FLAG = 
PACKAGE = einspline
PACKAGE_BUGREPORT = kesler@ciw.edu
PACKAGE_NAME = einspline
PACKAGE_STRING = einspline 0.8.9
PACKAGE_TARNAME = einspline
PACKAGE_VERSION = 0.8.9
PATH_SEPARATOR = :
PKGDATADEF = 
PKG_CONFIG = 
POW_LIB = 
PRTDIAG = 
PTHREAD_FLAG = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SIMD_FLAGS = 
STRIP = strip
VERSION = 0.8.9
abs_builddir = /home/cyrus/champ/lib/lib2/einspline/src
abs_srcdir = /home/cyrus/champ/lib/lib2/einspline/src
abs_top_builddir = /home/cyrus/champ/lib/lib2/einspline
abs_top_srcdir = /home/cyrus/champ/lib/lib2/einspline
ac_ct_CC = icc -std=c99 -fno-second-underscore
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = $(prefix)/include/einspline
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/cyrus/champ/lib/lib2/einspline/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/cyrus/champ/lib/lib2/einspline
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
AM_LDFLAGS = $(ALL_STATIC)
#MAYBE_BLIPS = blip_create.c blip_create.h
#CHECK_BLIPS = test_blip
#MAYBE_CUDA = multi_bspline_create_cuda.cu \
#                multi_bspline_cuda_s_impl.h  \
#                multi_bspline_cuda_c_impl.h  \
#                multi_bspline_eval_cuda.h

SINGLE_SRC = multi_bspline_eval_std_s.c multi_bspline_eval_std_s_cpp.cc       \
                multi_bspline_eval_std_c.c multi_bspline_eval_std_c_cpp.cc       \
                multi_bspline_eval_std_s_impl.h  multi_bspline_eval_std_c_impl.h 

#SINGLE_SRC = multi_bspline_eval_sse_s.c multi_bspline_eval_sse_s_cpp.cc       \
#                multi_bspline_eval_sse_c.c multi_bspline_eval_sse_c_cpp.cc       \
#                multi_bspline_eval_sse_s_impl.h  multi_bspline_eval_sse_c_impl.h 

DOUBLE_SRC = multi_bspline_eval_std_d.c multi_bspline_eval_std_d_cpp.cc       \
                multi_bspline_eval_std_z.c multi_bspline_eval_std_z_cpp.cc       \
                multi_bspline_eval_std_d_impl.h multi_bspline_eval_std_z_impl.h  \
                multi_nubspline_eval_std_z.c multi_nubspline_eval_std_z_cpp.cc   \
                multi_nubspline_eval_std_z_impl.h

#DOUBLE_SRC = multi_bspline_eval_sse_d.c multi_bspline_eval_sse_d_cpp.cc       \
#                multi_bspline_eval_sse_z.c multi_bspline_eval_sse_z_cpp.cc       \
#                multi_bspline_eval_sse_d_impl.h multi_bspline_eval_sse_z_impl.h  \
#                multi_nubspline_eval_sse_z.c multi_nubspline_eval_sse_z_cpp.cc   \
#                multi_nubspline_eval_sse_z_impl.h

TestBspline_SOURCES = TestBspline.c
TestNUBspline_SOURCES = TestNUBspline.c
test_fbspline_SOURCES = test_fbspline.f
test_fmulti_bspline_SOURCES = test_fmulti_bspline.f
#test_blip_SOURCES = test_blip.c
test_bspline_s_SOURCES = test_bspline_s.c
test_bspline_d_SOURCES = test_bspline_d.c
test_multi_SOURCES = test_multi.c
test_multi_cpp_SOURCES = test_multi_cpp.cc
time_multi_SOURCES = time_multi.c
LDADD = 
AM_CCFLAGS = -g 
TestBspline_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
TestNUBspline_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
test_fbspline_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
test_fmulti_bspline_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
test_blip_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
test_bspline_s_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
test_bspline_d_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
test_multi_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
test_multi_cpp_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
time_multi_LDADD = libeinspline.la $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
lib_LTLIBRARIES = libeinspline.la
libeinspline_la_SOURCES = \
                       aligned_alloc.h                \
                       bspline_base.h                 \
                       bspline_create.c               \
                       bspline_create.h               \
                       bspline_structs.h              \
                       bspline_data.c                 \
                       bspline_eval_std_s.h           \
                       bspline_eval_sse_s.h           \
                       bspline_eval_std_c.h           \
                       bspline_eval_sse_c.h           \
                       bspline_eval_std_d.h           \
                       bspline_eval_sse_d.h           \
                       bspline_eval_std_z.h           \
                       bspline_eval_sse_z.h           \
                       multi_bspline.h                \
                       multi_bspline_create.c         \
                       multi_bspline_create.h         \
                       multi_bspline_eval_c.h         \
                       multi_bspline_eval_d.h         \
                       multi_bspline_eval_s.h         \
                       multi_bspline_eval_z.h         \
                       multi_bspline_structs.h        \
                       multi_nubspline_create.c       \
                       nubspline_base.h               \
                       nubspline_create.c             \
                       nubspline_create.h             \
                       nubspline_eval_sse_s.h         \
                       nubspline_eval_std_s.h         \
                       nubspline_eval_sse_c.h         \
                       nubspline_eval_std_c.h         \
                       nubspline_eval_sse_d.h         \
                       nubspline_eval_std_d.h         \
                       nubspline_eval_sse_z.h         \
                       nubspline_eval_std_z.h         \
                       nubspline_structs.h            \
                       nubasis.h                      \
                       nubasis.c                      \
                       nugrid.h                       \
                       nugrid.c                       \
                       fbspline.c                     \
                       fbspline.h                     \
                       fmulti_bspline.c               \
                       fmulti_bspline.h               \
                       fnubspline.c                   \
                       fnubspline.h                   \
                       $(SINGLE_SRC)                  \
                       $(DOUBLE_SRC)                  \
                       $(MAYBE_BLIPS)                 \
                       $(MAYBE_CUDA)

libeinspline_la_LIBADD = $(FLIBS) $(FFTW3_LIBS) $(FFTW3F_LIBS)
include_HEADERS = bspline_base.h bspline_create.h bspline_eval_sse_c.h        \
                  bspline_eval_sse_d.h bspline_eval_sse_s.h                   \
                  bspline_eval_sse_z.h bspline_eval_std_c.h                   \
                  bspline_eval_std_d.h bspline_eval_std_s.h                   \
                  bspline_eval_std_z.h bspline.h bspline_structs.h            \
                  fbspline.h fmulti_bspline.h  fnubspline.h                   \
                  multi_bspline.h                                             \
                  multi_bspline_create.h    multi_bspline_structs.h           \
                  multi_bspline_eval_c.h    multi_bspline_eval_d.h            \
                  multi_bspline_eval_s.h    multi_bspline_eval_z.h            \
                  multi_nubspline.h                                           \
                  multi_nubspline_create.h    multi_nubspline_structs.h       \
                  multi_nubspline_eval_c.h    multi_nubspline_eval_d.h        \
                  multi_nubspline_eval_s.h    multi_nubspline_eval_z.h        \
                  nubspline_base.h nubspline_create.h                         \
                  nubspline_eval_sse_s.h nubspline_eval_std_s.h               \
	          nubspline_eval_sse_c.h nubspline_eval_std_c.h               \
                  nubspline_eval_sse_d.h nubspline_eval_std_d.h               \
	          nubspline_eval_sse_z.h nubspline_eval_std_z.h               \
                  nubspline_structs.h nubasis.h nubspline.h nugrid.h          \
                  multi_bspline_structs_cuda.h multi_bspline_create_cuda.h    \
                  multi_bspline_eval_cuda.h                                   \
                  config.h

EXTRA_DIST = multi_bspline_eval_cuda_c.cu
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .cu .f .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libeinspline.la: $(libeinspline_la_OBJECTS) $(libeinspline_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libeinspline_la_OBJECTS) $(libeinspline_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
TestBspline$(EXEEXT): $(TestBspline_OBJECTS) $(TestBspline_DEPENDENCIES) 
	@rm -f TestBspline$(EXEEXT)
	$(LINK) $(TestBspline_OBJECTS) $(TestBspline_LDADD) $(LIBS)
TestNUBspline$(EXEEXT): $(TestNUBspline_OBJECTS) $(TestNUBspline_DEPENDENCIES) 
	@rm -f TestNUBspline$(EXEEXT)
	$(LINK) $(TestNUBspline_OBJECTS) $(TestNUBspline_LDADD) $(LIBS)
test_blip$(EXEEXT): $(test_blip_OBJECTS) $(test_blip_DEPENDENCIES) 
	@rm -f test_blip$(EXEEXT)
	$(LINK) $(test_blip_OBJECTS) $(test_blip_LDADD) $(LIBS)
test_bspline_d$(EXEEXT): $(test_bspline_d_OBJECTS) $(test_bspline_d_DEPENDENCIES) 
	@rm -f test_bspline_d$(EXEEXT)
	$(LINK) $(test_bspline_d_OBJECTS) $(test_bspline_d_LDADD) $(LIBS)
test_bspline_s$(EXEEXT): $(test_bspline_s_OBJECTS) $(test_bspline_s_DEPENDENCIES) 
	@rm -f test_bspline_s$(EXEEXT)
	$(LINK) $(test_bspline_s_OBJECTS) $(test_bspline_s_LDADD) $(LIBS)
test_fbspline$(EXEEXT): $(test_fbspline_OBJECTS) $(test_fbspline_DEPENDENCIES) 
	@rm -f test_fbspline$(EXEEXT)
	$(F77LINK) $(test_fbspline_OBJECTS) $(test_fbspline_LDADD) $(LIBS)
test_fmulti_bspline$(EXEEXT): $(test_fmulti_bspline_OBJECTS) $(test_fmulti_bspline_DEPENDENCIES) 
	@rm -f test_fmulti_bspline$(EXEEXT)
	$(F77LINK) $(test_fmulti_bspline_OBJECTS) $(test_fmulti_bspline_LDADD) $(LIBS)
test_multi$(EXEEXT): $(test_multi_OBJECTS) $(test_multi_DEPENDENCIES) 
	@rm -f test_multi$(EXEEXT)
	$(LINK) $(test_multi_OBJECTS) $(test_multi_LDADD) $(LIBS)
test_multi_cpp$(EXEEXT): $(test_multi_cpp_OBJECTS) $(test_multi_cpp_DEPENDENCIES) 
	@rm -f test_multi_cpp$(EXEEXT)
	$(CXXLINK) $(test_multi_cpp_OBJECTS) $(test_multi_cpp_LDADD) $(LIBS)
time_multi$(EXEEXT): $(time_multi_OBJECTS) $(time_multi_DEPENDENCIES) 
	@rm -f time_multi$(EXEEXT)
	$(LINK) $(time_multi_OBJECTS) $(time_multi_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/TestBspline.Po
include ./$(DEPDIR)/TestNUBspline.Po
include ./$(DEPDIR)/blip_create.Plo
include ./$(DEPDIR)/bspline_create.Plo
include ./$(DEPDIR)/bspline_data.Plo
include ./$(DEPDIR)/fbspline.Plo
include ./$(DEPDIR)/fmulti_bspline.Plo
include ./$(DEPDIR)/fnubspline.Plo
include ./$(DEPDIR)/multi_bspline_create.Plo
include ./$(DEPDIR)/multi_bspline_eval_sse_c.Plo
include ./$(DEPDIR)/multi_bspline_eval_sse_c_cpp.Plo
include ./$(DEPDIR)/multi_bspline_eval_sse_d.Plo
include ./$(DEPDIR)/multi_bspline_eval_sse_d_cpp.Plo
include ./$(DEPDIR)/multi_bspline_eval_sse_s.Plo
include ./$(DEPDIR)/multi_bspline_eval_sse_s_cpp.Plo
include ./$(DEPDIR)/multi_bspline_eval_sse_z.Plo
include ./$(DEPDIR)/multi_bspline_eval_sse_z_cpp.Plo
include ./$(DEPDIR)/multi_bspline_eval_std_c.Plo
include ./$(DEPDIR)/multi_bspline_eval_std_c_cpp.Plo
include ./$(DEPDIR)/multi_bspline_eval_std_d.Plo
include ./$(DEPDIR)/multi_bspline_eval_std_d_cpp.Plo
include ./$(DEPDIR)/multi_bspline_eval_std_s.Plo
include ./$(DEPDIR)/multi_bspline_eval_std_s_cpp.Plo
include ./$(DEPDIR)/multi_bspline_eval_std_z.Plo
include ./$(DEPDIR)/multi_bspline_eval_std_z_cpp.Plo
include ./$(DEPDIR)/multi_nubspline_create.Plo
include ./$(DEPDIR)/multi_nubspline_eval_sse_z.Plo
include ./$(DEPDIR)/multi_nubspline_eval_sse_z_cpp.Plo
include ./$(DEPDIR)/multi_nubspline_eval_std_z.Plo
include ./$(DEPDIR)/multi_nubspline_eval_std_z_cpp.Plo
include ./$(DEPDIR)/nubasis.Plo
include ./$(DEPDIR)/nubspline_create.Plo
include ./$(DEPDIR)/nugrid.Plo
include ./$(DEPDIR)/test_blip.Po
include ./$(DEPDIR)/test_bspline_d.Po
include ./$(DEPDIR)/test_bspline_s.Po
include ./$(DEPDIR)/test_multi.Po
include ./$(DEPDIR)/test_multi_cpp.Po
include ./$(DEPDIR)/time_multi.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES


#if WITH_F77
#     libsprng_la_SOURCES += common/fwrap_mpi.c
#endif

#if HAVE_GMP
#     libsprng_la_SOURCES += pmlcg/pmlcg.h pmlcg/pmlcg.c pmlcg/info.h pmlcg/basic.h 
#endif

.cu.lo:
	$(top_builddir)/cudalt.py $@ $(NVCC) -c $(NVCCFLAGS) $<
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
